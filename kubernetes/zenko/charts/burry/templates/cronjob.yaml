apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ template "burry.fullname" . }}
  labels:
    app: {{ template "burry.name" . }}
    chart: {{ template "burry.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  suspend: {{ .Values.cronjob.suspend }}
  schedule: "{{ .Values.cronjob.schedule }}"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 6
  jobTemplate:
    metadata:
      labels:
        app: {{ template "burry.name" . }}
        release: {{ .Release.Name }}
    spec:
      template:
        metadata:
          labels:
            app: {{ template "burry.name" . }}
            release: {{ .Release.Name }}
{{- if .Values.pod.annotations }}
          annotations:
{{ toYaml .Values.pod.annotations | indent 12 }}
{{- end }}
        spec:
          volumes:
            - name: {{ template "burry.fullname" . }}-configmap
              configMap:
                name: {{ template "burry.fullname" . }}-config
                items:
                - key: .burryfest
                  path: .burryfest
            - name: burry-storage
{{- if .Values.persistentVolume.enabled }}
              persistentVolumeClaim:
                claimName: {{ if .Values.persistentVolume.existingClaim }}{{ .Values.persistentVolume.existingClaim }}{{- else }}{{ template "burry.fullname" . }}{{- end }}
{{- else }}
              emptyDir: {}
{{- end }}
          restartPolicy: OnFailure
          containers:
            - name: {{ template "burry.name" . }}
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              workingDir: /workdir
              volumeMounts:
                - name: burry-storage
                  mountPath: /workdir
                - name: {{ template "burry.fullname" . }}-configmap
                  mountPath: "/config/"
              command:
              - sh
              - -c
              - |
                cp /config/.burryfest /workdir/
                burry
              env:
{{- if .Values.env }}
{{- range $key,$value := .Values.env }}
              - name: {{ $key | upper | quote}}
                value: {{ $value | quote}}
{{- end }}
{{- end }}
              resources:
{{ toYaml .Values.resources | indent 16 }}
    {{- with .Values.nodeSelector }}
          nodeSelector:
{{ toYaml . | indent 12 }}
    {{- end }}
    {{- with .Values.affinity }}
          affinity:
{{ toYaml . | indent 12 }}
    {{- end }}
    {{- with .Values.tolerations }}
          tolerations:
{{ toYaml . | indent 12 }}
    {{- end }}
    {{- with .Values.securityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
    {{- end }}

